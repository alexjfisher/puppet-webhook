#!/usr/bin/env ruby
require 'openssl'
require 'sinatra'
require 'sinatra/config_file'
require 'webrick'
require 'webrick/https'
require 'puppet_webhook'

config_file '../config.yml'

PIDFILE = settings.pidfile
LOCKFILE = settings.lockfile
APP_ROOT = settings.approot
COMMAND_PREFIX = settings.command_prefix
LOGGER = WEBrick::Log.new(settings.logfile, WEBrick::Log::DEBUG)

case settings.server_type
when 'simple'
  server_type = WEBrick::SimpleServer
when 'daemon'
  server_type = WEBrick::Daemon
end

opts = {
  Host: settings.bind_address,
  Port: settings.port,
  Logger: LOGGER,
  ServerType: server_type,
  ServerSoftware: settings.server_software,
  SSLEnable: settings.enable_ssl,
  StartCallBack: Proc.new { File.open(PIDFILE, 'w') { |f| f.write Process.pid } }
}

if settings.enable_ssl
  opts[:SSLVerifyClient] = settings.verify_ssl
  opts[:SSLCertificate] = OpenSSL::X509::Certificate.new(File.open(settings.public_key_path).read)
  opts[:SSLPrivateKey] = OpenSSL::PKey::RSA.new(File.open(settings.private_key_path).read)
  opts[:SSLCertName] = [ [ 'CN', WEBrick::Utils.getservername ] ]
end

Rack::Handler::WEBrick.run(PuppetWebhook, opts) do |server|
  [:INT, :TERM].each { |sig| trap(sig) { server.stop } }
end
