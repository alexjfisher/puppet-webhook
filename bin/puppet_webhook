#!/usr/bin/env ruby
require 'openssl'
require 'sinatra'
require 'sinatra/config_file'
require 'webrick'
require 'webrick/https'
require_relative '../puppet_webhook.rb'

config_file '/etc/puppet_webhook.yaml'

PIDFILE = settings.pidfile || '/var/run/webhook/webhook.pid'
LOCKFILE = settings.lockfile || '/var/run/webhook/webhook.lock'
APP_ROOT = settings.approot || '/var/run/webhook'
COMMAND_PREFIX = settings.command_prefix || ''
LOGGER = WEBrick::Log::new(settings.logfile, WEBrick::Log::DEBUG)

opts = {
  Host: settings.bind_address,
  Port: settings.port,
  Logger: LOGGER,
  ServerType: settings.server_type || WEBrick::Daemon,
  ServerSoftware: settings.server_software,
  SSLEnable: settings.enable_ssl,
  StartCallBack: Proc.new { File.open(PIDFILE, 'w') { |f| f.write Process.pid } }
}

if settings.enable_ssl
  opts[:SSLVerifyClient] = settings.verify_ssl || OpenSSL::SSL::VERIFY_NONE
  opts[:SSLCertificate] = OpenSSL::X509::Certificate.new(File.open(settings.public_key_path).read)
  opts[:SSLPrivateKey] = OpenSSL::PKey::RSA.new(File.open(settings.private_key_path).read)
  opts[:SSLCertName] = [ [ 'CN', WEBrick::Utils::getservername ] ]
end

Rack::Handler::WEBrick.run(PuppetWebhook, opts) do |server|
  [:INT, :TERM].each { |sig| trap(sig) { server.stop} }
end
